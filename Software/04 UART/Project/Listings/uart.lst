C51 COMPILER V9.60.7.0   UART                                                              01/07/2024 20:24:14 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN .\Objects\uart.obj
COMPILER INVOKED BY: D:\Software\Keil_v5\C51\BIN\C51.EXE ..\Bsp\uart\uart.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Bsp\delay
                    -;..\Bsp\led;..\Bsp\key;..\Bsp\timer;..\Bsp\uart) DEBUG OBJECTEXTEND PRINT(.\Listings\uart.lst) OBJECT(.\Objects\uart.obj
                    -)

line level    source

   1          #include  "uart.h"
   2          #include  "string.h"
   3          
   4          UartDev_TypeDef uart_dev;
   5          
   6          //串口初始化
   7          void uart_init(int baud_rate)                           //      Baud_Rate  波特率预设置
   8          {
   9   1              //配置串口寄存器
  10   1              SCON  =  0X50;                                              //串口方式1  10位UART  失能校验 使能接收 清除标志位
  11   1              PCON &= ~(0x1<<7);                                         //波特率不翻倍
  12   1      
  13   1              //定时器1,方式2
  14   1              TMOD &= ~(0XF<<4);                                                //清零
  15   1              TMOD |= (0x2<<4);                                                 //方式2
  16   1              
  17   1              TH1=TL1=(256-(FOSC / 32 / 12 / baud_rate));     //定时器预设 =>波特率
  18   1              ET1 = 0;                                                                        //禁止定时器1中断
  19   1              TR1 = 1;                                                                //启动定时器1
  20   1              EA=1;                                                                           //启动总中断
  21   1              ES=1;                                                                           //启动串口中断
  22   1      }
  23          
  24          
  25          //串口发送一个字节的数据
  26          static void uart_send_byte(const char byte)
  27          {
  28   1              SBUF = byte;
  29   1              while(TI == 0);                 //等待上次发送完成
  30   1              TI= 0;                          //软件清零
  31   1      }
  32          
  33          
  34          //串口接收一个字节的数据
  35          static char uart_receive_byte(void)
  36          {
  37   1              char rev_data;  
  38   1              while(RI == 0);         //等待接收完成  
  39   1              RI = 0;                         //软件清零
  40   1              rev_data = SBUF;                        
  41   1              return rev_data;
  42   1      }
  43          
  44          
  45          //串口发送字符串
  46          void uart_send_string(const char *str)
  47          {
  48   1              while(*str != '\0')
  49   1              {
  50   2                      uart_send_byte(*str++);
  51   2              }
  52   1      }
  53          
C51 COMPILER V9.60.7.0   UART                                                              01/07/2024 20:24:14 PAGE 2   

  54          
  55          
  56          //返回值=X的Y次方
  57          static int uart_pow(int x,int y)
  58          {
  59   1              unsigned char i;
  60   1              int result = 1;
  61   1              for(i = 0;i < y; i++)
  62   1              {
  63   2                      result *= x;
  64   2              }
  65   1              return result;
  66   1      }
  67          
  68          
  69          //串口发送数字
  70          void uart_send_number(int len, const int num)
  71          {
  72   1              int i = 0;
  73   1              for(i = len; i > 0; i--)
  74   1              {
  75   2                      uart_send_byte(num / uart_pow(10,i-1)%10+'0');
  76   2              }
  77   1      }
  78          
  79          
  80          
  81          //串口接收字符串(阻塞模式,无中断)
  82          void uart_receive_string(char *rev_data)
  83          {
  84   1              int i=0;
  85   1              char temp;
  86   1              
  87   1              while(1)
  88   1              {
  89   2                      temp = uart_receive_byte();
  90   2                      if(temp !='\n' && temp!='\r')
  91   2                      {
  92   3                              *rev_data++ = temp;
  93   3                      }
  94   2                      else
  95   2                      {
  96   3                              rev_data[i]= '\0';
  97   3                              i=0;    
  98   3                              return;
  99   3                      }
 100   2              }
 101   1      }
 102          
 103          void uart_receive_clear(void)
 104          {
 105   1              uart_dev.rev_len = 0;
 106   1              uart_dev.rev_finish = 0;
 107   1              memset(uart_dev.rev_buf, 0x00, REV_BUFF_SIZE);
 108   1      }
 109          
 110          
 111          
 112          


MODULE INFORMATION:   STATIC OVERLAYABLE
C51 COMPILER V9.60.7.0   UART                                                              01/07/2024 20:24:14 PAGE 3   

   CODE SIZE        =    296    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     67      14
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
