C51 COMPILER V9.60.7.0   MAIN                                                              01/19/2024 19:49:10 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\SoftWare\Keil_v5\C51\BIN\C51.EXE ..\User\main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Bsp\delay;..\
                    -Bsp\led;..\Bsp\key;..\Bsp\timer;..\Bsp\uart;..\Bsp\at24cxx) DEBUG OBJECTEXTEND PRINT(.\Listings\main.lst) OBJECT(.\Objec
                    -ts\main.obj)

line level    source

   1          #include <STC89C5xRC.H>
   2          #include "string.h"
   3          #include "at24cxx.h"
   4          #include "stc_it.h"
   5          #include "timer.h"
   6          #include "delay.h"
   7          #include "uart.h"
   8          #include "key.h"
   9          #include "led.h"
  10          
  11          #define SAVE_ADDR  0x00
  12          
  13          code unsigned char write_buf1[] = "ABCDEFGHI";                          //储存数据区1
  14          code unsigned char write_buf2[] = "123456789";                          //储存数据区2
  15          
  16          unsigned char len=sizeof(write_buf1)/sizeof(unsigned char);     //数据大小
  17          
  18          unsigned char read_buf[16];                                                                     //读取缓冲区
  19          
  20          void main(void)
  21          {
  22   1              unsigned char key_val;
  23   1              
  24   1              uart_init(2400);                
  25   1              x24cxx_Init();          
  26   1              timer0_init(1000 * 5);  //5ms
  27   1      
  28   1              uart_send_string("SYSTEM_INIT_OK!\r\n");
  29   1              
  30   1              while(1)
  31   1              {
  32   2                      //按键处理
  33   2                      key_val = key_scan();
  34   2                      switch(key_val)
  35   2                      {
  36   3                              case KEY_VAL_0: //写数据1
  37   3                                      x24Cxx_WritePage(SAVE_ADDR, len, write_buf1);
  38   3                                      uart_send_string("WriteSize:\r\n");
  39   3                                      uart_send_number(2, len);
  40   3                                      uart_send_string("\r\nWriteData:\r\n");
  41   3                                      uart_send_string(write_buf1);
  42   3                                      break;
  43   3                              
  44   3                              case KEY_VAL_1: //写数据2
  45   3                                      x24Cxx_WritePage(SAVE_ADDR, len, write_buf2);
  46   3                                      uart_send_string("WriteSize:\r\n");
  47   3                                      uart_send_number(2, len);
  48   3                                      uart_send_string("\r\nWriteData:\r\n");
  49   3                                      uart_send_string(write_buf2);
  50   3                                      break;
  51   3                              
  52   3                              case KEY_VAL_2: //读数据
  53   3                                      x24Cxx_ReadPage(SAVE_ADDR, len, read_buf);
C51 COMPILER V9.60.7.0   MAIN                                                              01/19/2024 19:49:10 PAGE 2   

  54   3                                      uart_send_string("\r\nReadData:\r\n");
  55   3                                      uart_send_string(read_buf);
  56   3                                      break;
  57   3                              
  58   3                              case KEY_VAL_3: //清除读缓冲区
  59   3                                      memset(read_buf, 0, len);
  60   3                                      uart_send_string("\r\nClearReadData!\r\n");
  61   3                                      break;
  62   3                                
  63   3                              default:
  64   3                                      break;
  65   3                      }
  66   2                      
  67   2                      //串口数据回环测试
  68   2                      if(uart_dev.rev_finish == 1)    
  69   2                      {
  70   3                              uart_send_string(uart_dev.rev_buf);
  71   3                              uart_receive_clear();
  72   3                      }
  73   2              }
  74   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    231    ----
   CONSTANT SIZE    =     99    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     17    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
